version: '3'
services:
  
  nginx:
    image: nginx:1.27.3
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/html:/usr/share/nginx/html:rw
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/log:/var/log/nginx
    environment:
      TZ: Asia/Shanghai
    networks:
      - api-network
    labels:
      - 'api-nginx'
        
  database:
    image: postgres:latest
    restart: unless-stopped
    container_name: mbl-api-database
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: Asia/Shanghai
    ports:
      - "5432:5432"
    volumes: # 数据持久化的配置
      - .volumes/database/postgresql/data:/var/lib/postgresql/data
      - .volumes/database/postgresql/log:/var/log/postgresql
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - api-network

  pgadmin4:
    image: dpage/pgadmin4:8.14.0
    restart: unless-stopped
    container_name: mbl-api-database-pgadmin4
    ports:
      - "15432:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - api-network

  api4:
    build:
      context: .
      dockerfile: Dockerfile-postgresql.prod
    depends_on:
      - database
    image: mbl-api:0.0.1-SNAPSHOT
    container_name: mbl-api
    privileged: true
    ports:
      - "29080:29080"
    environment:
      TZ: Asia/Shanghai
      # database
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}

      API_PORT: ${API_PORT}

      IMAGE_UPLOAD_MAX_SIZE: ${IMAGE_UPLOAD_MAX_SIZE}
      PDF_OUT_DIR: ${PDF_OUT_DIR}
      IMAGE_OUT_DIR: ${IMAGE_OUT_DIR}
      LOG_DIR: ${LOG_DIR}
    volumes: # 日志
      - .logs/mbl:/var/log/mbl
      - .mbl/images:/home/ubuntu/mbl/images
      - .mbl/pdfs:/home/ubuntu/mbl/pdfs
    networks:
      - api-network
  
networks:
  api-network:
    driver: bridge